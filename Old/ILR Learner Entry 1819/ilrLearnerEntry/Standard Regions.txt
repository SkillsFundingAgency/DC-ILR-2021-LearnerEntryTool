        #region Constructor
        #endregion
        #region Public Properties
        #endregion
        #region Public Methods
        #endregion
        #region PRIVATE Methods
        #endregion

        
         #region INotifyPropertyChanged Members
         /// <summary>
         /// INotifyPropertyChanged requires a property called PropertyChanged.
         /// </summary>
         public event PropertyChangedEventHandler PropertyChanged;

         /// <summary>
         /// Fires the event for the property when it changes.
         /// </summary>
         protected virtual void OnPropertyChanged(string propertyName)
         {
#if DEBUG
             VerifyPropertyName(propertyName);
#endif
             if (PropertyChanged != null)
                 PropertyChanged(this, new PropertyChangedEventArgs(propertyName));

         }

         [Conditional("DEBUG")]
         [DebuggerStepThrough]
         public void VerifyPropertyName(string propertyName)
         {
             // Verify that the property name matches a real,  
             // public, instance property on this object.
             if (TypeDescriptor.GetProperties(this)[propertyName] == null)
             {
                 var msg = "Invalid property name: " + propertyName;

                 if (this.ThrowOnInvalidPropertyName)
                 {
                     throw new Exception(msg);
                 }
                 else
                 {
                     Debug.Fail(msg);
                 }
             }
         }

         protected bool ThrowOnInvalidPropertyName { get; set; }

         #endregion      
